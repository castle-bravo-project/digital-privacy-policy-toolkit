
import React, { useState, useEffect } from 'react';
import { getBreachTimeline } from '../services/geminiService';
import type { BreachEvent } from '../types';
import { TimelineIcon } from './icons';

const BreachTimeline: React.FC = () => {
    const [events, setEvents] = useState<BreachEvent[]>([]);
    const [loading, setLoading] = useState<boolean>(true);
    const [error, setError] = useState<string | null>(null);

    useEffect(() => {
        const fetchTimeline = async () => {
            try {
                setLoading(true);
                setError(null);
                const timelineEvents = await getBreachTimeline();
                setEvents(timelineEvents.sort((a, b) => b.year - a.year));
            } catch (err) {
                setError(err instanceof Error ? err.message : "An unknown error occurred.");
            } finally {
                setLoading(false);
            }
        };

        fetchTimeline();
         // eslint-disable-next-line react-hooks/exhaustive-deps
    }, []);

    return (
        <div className="animate-fade-in">
            <h2 className="text-2xl font-bold text-white flex items-center gap-3 mb-6">
                <TimelineIcon className="text-sky-400" />
                Government Breach Database
            </h2>
            <p className="text-slate-400 mb-8">
                A summary of significant historical security incidents. This data provides context for assessing the government's capability to manage sensitive systems like encryption backdoors or identity databases. Data generated by Gemini.
            </p>
            {loading && <LoadingSkeleton />}
            {error && <div className="text-red-400 bg-red-900/50 p-4 rounded-md">Error: {error}</div>}
            {!loading && !error && (
                <div className="relative border-l-2 border-slate-700 ml-4 pl-8 space-y-12">
                    {events.map((event, index) => (
                        <TimelineItem key={index} event={event} />
                    ))}
                </div>
            )}
        </div>
    );
};

const TimelineItem: React.FC<{ event: BreachEvent }> = ({ event }) => (
    <div className="relative">
        <div className="absolute -left-[38px] top-1 h-4 w-4 rounded-full bg-sky-500 border-4 border-slate-900"></div>
        <div className="bg-slate-800/50 rounded-lg p-6 shadow-lg border border-slate-700/50 hover:border-slate-600 transition-colors">
            <p className="absolute -top-4 right-4 bg-slate-700 text-slate-300 px-3 py-1 rounded-full text-sm font-semibold">{event.year}</p>
            <h3 className="text-xl font-bold text-sky-400 mb-2">{event.incident}</h3>
            <p className="text-slate-300 mb-4"><span className="font-semibold text-slate-400">Impact:</span> {event.impact}</p>
            <p className="text-slate-300"><span className="font-semibold text-slate-400">Root Cause:</span> {event.rootCause}</p>
        </div>
    </div>
);

const LoadingSkeleton: React.FC = () => (
    <div className="space-y-8">
        {[...Array(3)].map((_, i) => (
            <div key={i} className="bg-slate-800 p-6 rounded-lg animate-pulse">
                <div className="h-6 w-3/5 bg-slate-700 rounded mb-4"></div>
                <div className="h-4 w-full bg-slate-700 rounded mb-2"></div>
                <div className="h-4 w-4/5 bg-slate-700 rounded"></div>
            </div>
        ))}
    </div>
);

export default BreachTimeline;
